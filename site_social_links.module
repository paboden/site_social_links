<?php

/**
 * Implements hook_permission().
 */
function site_social_links_permission() {
  return array(
    'administer social links config' => array(
      'title' => t('Administer site social media links'),
      'description' => t('Administer the general settings for social media links block'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function site_social_links_menu() {
  $items['admin/config/system/site-social-links'] = array(
    'title' => 'Social icons',
    'description' => 'Configure social media links.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('site_social_links_configure'),
    'access arguments' => array('administer social links config'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'site_social_links.admin.inc',
    'file path' => drupal_get_path('module', 'site_social_links'),
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function site_social_links_theme() {
  return array(
    'site_social_links_block' => array(
      // Specify variables you'll be using in the template.
      'variables' => array(
        // empty array is correct. Values set here are stored in Theme Registry.
        'social_icons' => array(),
      ),
      // Use a template file called site-social-links-block.tpl.php.
      'template' => 'templates/site_social_links_block',
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function site_social_links_block_info() {

  $blocks['site_social_links'] = array(
    'info' => t('Social links'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function site_social_links_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'site_social_links':
      // We don't want the block to have a title.
      $block['subject'] = '';
      // Using a callback function to get a renderable array of content for this
      // block. We cache the data in the callback function for faster rendering.
      $block['content'] = site_social_links_block_content();
      break;
  }

  return $block;
}

/**
 * Implements hook_contextual_links_view_alter().
 */
function site_social_links_contextual_links_view_alter(&$element, $items) {
  if (isset($element['#element']['#block']->module)) {
    if ($element['#element']['#block']->module == 'site_social_links') {
      $links = &$element['#links'];
      $links = NULL;
      $links['site_social_links-configure']['title'] = 'Edit social icons';
      $links['site_social_links-configure']['href'] = 'admin/config/system/site-social-links';
      $links['site_social_links-configure']['query'] = drupal_get_destination();
    }
  }
}

/**
 * Implements hook_preprocess_panels_pane().
 */
function site_social_links_preprocess_panels_pane(&$vars) {
  if (isset($vars['pane']->subtype) && ($vars['pane']->subtype == 'site_social_links-site_social_links')) {
    $link = '<div class="contextual-links-wrapper"><ul class="contextual-links"><li class="0 first last">';
    $link .= l(t('Edit social icons'),'admin/config/system/site-social-links', array('query' => drupal_get_destination()));
    $link .= '</li></ul></div>';
    $vars['admin_links'] = $link;
  }
}

/**
 * Callback function to get the renderable array of data for the site copyright block.
 */
function site_social_links_block_content() {
  $content = &drupal_static(__FUNCTION__);

  if (!isset($content)) {
    if ($cache = cache_get('site_social_links_block_content')) {
      $content = $cache->data;
    }
    else {
      $content = array(
        // Specify the theme function to use.
        '#theme' => 'site_social_links_block',
        // Provide variable values as specified in hook_theme.
        '#social_icons' => variable_get('site_social_links', array()),
      );
      cache_set('site_social_links_block_content', $content, 'cache');
    }
  }

  return $content;
}